{"version":3,"sources":["webpack:///src/app/pages/register/register.page.html","webpack:///src/app/pages/register/register-routing.module.ts","webpack:///src/app/pages/register/register.module.ts","webpack:///src/app/pages/register/register.page.scss","webpack:///src/app/pages/register/register.page.ts"],"names":["routes","path","component","RegisterPageRoutingModule","imports","forChild","exports","RegisterPageModule","declarations","RegisterPage","router","toastCtrl","loadingCtrl","alertCtrl","accsPrvds","your_name","gender","date_birth","email_address","password","confirm_pass","disabledButton","presentToast","create","message","loader","present","Promise","resolve","body","aksi","postData","subscribe","res","success","dismiss","msg","navigate","err","presentAlert","a","duration","position","toast","header","backdropDismiss","buttons","text","handler","blah","console","log","tryRegister","alert","selector","template"],"mappings":"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","file":"pages-register-register-module-es5.js","sourcesContent":["export default \"<ion-header [translucent]=\\\"true\\\">\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button\\n          [text]=\\\"buttonText\\\"\\n          [icon]=\\\"buttonIcon\\\">\\n      </ion-back-button>\\n    </ion-buttons>\\n    <ion-title>\\n      REGISTRO NUEVO\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-list>\\n    <div class=\\\"\\\">\\n      <ion-item>\\n        <ion-input type=\\\"text\\\" placeholder=\\\"Nombre\\\" [(ngModel)]=\\\"your_name\\\"></ion-input>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label style=\\\"color:#999\\\">Genero</ion-label>\\n        <ion-select interface=\\\"popover\\\" [(ngModel)]=\\\"gender\\\" >\\n          <ion-select-option value=\\\"f\\\">F</ion-select-option>\\n          <ion-select-option value=\\\"m\\\">M</ion-select-option>\\n        </ion-select>\\n      </ion-item>\\n\\n      <ion-item style=\\\"color: #999;\\\">\\n        <ion-label position=\\\"floating\\\">Año de Nacimiento</ion-label>\\n        <ion-datetime displayFormat=\\\"YY/MM/DD\\\" [(ngModel)]=\\\"date_birth\\\" min=\\\"1945-08-17\\\" max=\\\"2020-12-09\\\"></ion-datetime>\\n      </ion-item>\\n      \\n   \\n      <ion-item>\\n        <ion-input type=\\\"text\\\" placeholder=\\\"Usuario\\\" [(ngModel)]=\\\"email_address\\\"></ion-input>\\n      </ion-item>\\n  \\n      <ion-item>\\n        <ion-input type=\\\"password\\\" placeholder=\\\"Contrasena\\\" [(ngModel)]=\\\"password\\\" required pattern=\\\"(?=^.{8,}$)((?=.*\\\\d)|(?=.*\\\\W+))(?![.\\\\n])(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9]).*$\\\"></ion-input>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-input type=\\\"password\\\" placeholder=\\\"Confime su contrasena\\\" [(ngModel)]=\\\"confirm_pass\\\" required pattern=\\\"(?=^.{8,}$)((?=.*\\\\d)|(?=.*\\\\W+))(?![.\\\\n])(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9]).*$\\\"></ion-input>\\n      </ion-item>\\n\\n      <ion-button expand=\\\"full\\\" class=\\\"ion-padding\\\" color=\\\"primary\\\" (click)=\\\"tryRegister()\\\" [disabled]=\\\"disabledButton\\\">REGISTRAR</ion-button>\\n\\n      \\n      <p style=\\\"font-size: 14px; color: #999;\\\" class=\\\"ion-padding\\\" >\\n        Ingrese maximo 8 caracteres <br/>\\n        Ingrese un numero <br/>\\n        Ingrese una Mayuscula <br/>\\n        Ingrese un singno <br/>\\n      </p>\\n  \\n    </div>\\n      \\n  </ion-list>\\n\\n</ion-content>\\n\\n\\n\\n\\n\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RegisterPage } from './register.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegisterPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RegisterPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RegisterPageRoutingModule } from './register-routing.module';\n\nimport { RegisterPage } from './register.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RegisterPageRoutingModule\n  ],\n  declarations: [RegisterPage]\n})\nexport class RegisterPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3JlZ2lzdGVyL3JlZ2lzdGVyLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ToastController, LoadingController, AlertController } from '@ionic/angular';\nimport { AccessProviders } from '../../providers/access-providers';\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.page.html',\n  styleUrls: ['./register.page.scss'],\n})\nexport class RegisterPage implements OnInit {\n\n  your_name: string=\"\";\n  gender: string=\"\";\n  date_birth: string=\"\";\n  email_address: string=\"\";\n  password: string=\"\";\n  confirm_pass: string=\"\";\n\n  disabledButton;\n\n\n  constructor(\n    private router: Router,\n    private toastCtrl: ToastController,\n    private loadingCtrl: LoadingController,\n    private alertCtrl: AlertController,\n    private accsPrvds: AccessProviders\n\n  ) { }\n\n  ngOnInit() {\n  }\n\n  ionViewDiEnter(){\n    this.disabledButton = false;\n  }\n  \n\n  async tryRegister(){\n    if(this.your_name==\"\"){\n      this.presentToast('Tu nombre es requerido');\n    }else if(this.gender==\"\"){\n      this.presentToast('El genero es requerico');\n    } else if(this.date_birth==\"\"){\n      this.presentToast('Se requiere la Fecha de Nacimiento');\n    } else if(this.email_address==\"\"){\n      this.presentToast('Se requiere el usuario');\n    } else if(this.password==\"\"){\n      this.presentToast('Se requiere la Contraseña');\n    } else if(this.confirm_pass!= this.password){\n      this.presentToast('Se requiere que confirme su Contraseña');\n    }else{\n      this.disabledButton = true;\n      const loader = await this.loadingCtrl.create({\n        message: 'Espere por favor....',\n      });\n      await loader.present();\n\n      return new Promise(resolve =>{\n        let body = {\n          aksi: 'proses_register',\n          your_name: this.your_name,\n          gender: this.gender,\n          date_birth: this.date_birth,\n          email_address: this.email_address,\n          password: this.password\n        }\n\n        this.accsPrvds.postData(body, 'proses_api.php').subscribe((res:any)=>{\n          if(res.success==true){\n            loader.dismiss();\n            this.disabledButton = false;\n            this.presentToast(res.msg);\n            this.router.navigate(['/login']);\n          }else{\n            loader.dismiss();\n            this.disabledButton = false;\n            this.presentToast(res.msg);\n          }\n        },(err)=>{\n          loader.dismiss();\n          //this.presentToast('registro ');\n          //this.router.navigate(['/login']);\n          this.disabledButton = false;\n          this.presentAlert('Timeout');\n\n        });\n        \n      });\n    }\n  }\n\n  async presentToast(a){\n    const toast = await this.toastCtrl.create({\n      message: a,\n      duration: 1500,\n      position: 'top'\n    });\n    toast.present();\n  }\n\n  async presentAlert(a) {\n    const alert = await this.alertCtrl.create({\n      header: a,\n      backdropDismiss: false,\n      buttons: [\n        {\n          text: 'Close',\n          handler: (blah) => {\n            console.log('Confirm Cancel: blah');\n            //action\n          }\n        }, {\n          text: 'Try Again',\n          handler: () => {\n            this.tryRegister();\n          }\n        }\n      ]\n    });\n\n    await alert.present();\n  }\n\n}\n"]}