{"version":3,"sources":["webpack:///src/app/pages/crud/crud.page.html","webpack:///src/app/pages/crud/crud-routing.module.ts","webpack:///src/app/pages/crud/crud.module.ts","webpack:///src/app/pages/crud/crud.page.scss","webpack:///src/app/pages/crud/crud.page.ts"],"names":["routes","path","component","CrudPageRoutingModule","imports","forChild","exports","CrudPageModule","declarations","CrudPage","router","toastCtrl","alertCtrl","loadingCtrl","accsPrvds","actRoute","your_name","gender","date_birth","email_address","password","confirm_pass","params","subscribe","data","console","log","id","loadUser","Promise","resolve","body","aksi","postData","res","result","date_birthday","disabledbutton","a","presentToast","create","message","loader","present","action","success","dismiss","msg","navigate","presentAlert","err","duration","toast","b","header","backdropDismiss","buttons","text","handler","blah","crudAction","alert","selector","template"],"mappings":"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","file":"pages-crud-crud-module-es5.js","sourcesContent":["export default \"<ion-header no-border>\\n  <ion-toolbar>\\n    <ion-title>REGISTRO DE USUARIOS</ion-title>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons> \\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-buutons color=\\\"light\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"list-circle\\\"></ion-icon>\\n      </ion-buutons>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-list>\\n    <div>\\n      <ion-item>\\n        <ion-input type=\\\"text\\\" placeholder=\\\"Nombre\\\" [(ngModel)]=\\\"your_name\\\"></ion-input>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label style=\\\"color:#999\\\">Genero</ion-label>\\n        <ion-select interface=\\\"popover\\\" [(ngModel)]=\\\"gender\\\" >\\n          <ion-select-option value=\\\"f\\\">F</ion-select-option>\\n          <ion-select-option value=\\\"m\\\">M</ion-select-option>\\n        </ion-select>\\n      </ion-item>\\n\\n      <ion-item style=\\\"color: #999;\\\">\\n        <ion-label position=\\\"floating\\\">Año de Nacimiento</ion-label>\\n        <ion-datetime displayFormat=\\\"YY/MM/DD\\\" [(ngModel)]=\\\"date_birth\\\" min=\\\"1945-08-17\\\" max=\\\"2020-12-09\\\"></ion-datetime>\\n      </ion-item>\\n      \\n   \\n      <ion-item>\\n        <ion-input type=\\\"email_address\\\" placeholder=\\\"Usuario\\\" *ngIf=\\\"id==0\\\" [(ngModel)]=\\\"email_address\\\"></ion-input>\\n        <ion-input type=\\\"email_address\\\" placeholder=\\\"Usuario\\\" *ngIf=\\\"id!=0\\\" readonly=\\\"true\\\" [(ngModel)]=\\\"email_address\\\"></ion-input>\\n      </ion-item>\\n  \\n      <ion-item>\\n        <ion-input type=\\\"password\\\" placeholder=\\\"Contrasena\\\" [(ngModel)]=\\\"password\\\" required pattern=\\\"(?=^.{8,}$)((?=.*\\\\d)|(?=.*\\\\W+))(?![.\\\\n])(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9]).*$\\\"></ion-input>\\n      </ion-item>\\n\\n      <ion-button expand=\\\"full\\\" class=\\\"ion-padding\\\" *ngIf=\\\"id==0\\\"  color=\\\"primary\\\" (click)=\\\"crudAction('Create')\\\" [disabled]=\\\"disabledbutton\\\">Registrar</ion-button>\\n      <ion-button expand=\\\"full\\\" class=\\\"ion-padding\\\" *ngIf=\\\"id!=0\\\" color=\\\"primary\\\" (click)=\\\"crudAction('Update')\\\" [disabled]=\\\"disabledbutton\\\">Cargar</ion-button>\\n  \\n    </div>\\n\\n    <p style=\\\"font-size: 14px; color: #999;\\\" class=\\\"ion-padding\\\" *ngIf=\\\"id!=0\\\">\\n      Deje la contraseña en blanco si no desea cambiarla\\n    </p>\\n      \\n  </ion-list>\\n\\n</ion-content>\\n\\n\\n\\n\\n\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CrudPage } from './crud.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CrudPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CrudPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CrudPageRoutingModule } from './crud-routing.module';\n\nimport { CrudPage } from './crud.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    CrudPageRoutingModule\n  ],\n  declarations: [CrudPage]\n})\nexport class CrudPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2NydWQvY3J1ZC5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ToastController, LoadingController, AlertController } from '@ionic/angular';\nimport { AccessProviders } from '../../providers/access-providers';\n\n\n@Component({\n  selector: 'app-crud',\n  templateUrl: './crud.page.html',\n  styleUrls: ['./crud.page.scss'],\n})\nexport class CrudPage implements OnInit {\n\n  id: number;\n  your_name: string=\"\";\n  gender: string=\"\";\n  date_birth: string=\"\";\n  email_address: string=\"\";\n  password: string=\"\";\n  confirm_pass: string=\"\";\n\n  disabledbutton;\n\n  constructor(\n    private router: Router,\n    private toastCtrl: ToastController,\n    private alertCtrl: AlertController,\n    private loadingCtrl: LoadingController,\n    private accsPrvds: AccessProviders,\n    private actRoute: ActivatedRoute\n  ) { }\n\n  ngOnInit() {\n    this.actRoute.params.subscribe((data: any)=>{\n      console.log(data);\n      this.id = data.id;\n\n      if(this.id != 0){\n        this.loadUser()\n      }\n    });\n  }\n\n  loadUser(){\n    return new Promise(resolve =>{\n      let body = {\n        aksi: 'load_single_data', \n        id: this.id\n      }\n      this.accsPrvds.postData(body, 'proses_api.php').subscribe((res: any) => {\n        this.your_name = res.result.your_name;\n        this.gender = res.result.gender;\n        this.date_birth = res.result.date_birthday;\n        this.email_address = res.result.email_address;\n      });\n    });\n  }\n\n  ionViewDidEnter(){\n    this.disabledbutton = false;\n  }\n  \n\n  async crudAction(a){\n    if(this.your_name==\"\"){\n      this.presentToast('Tu nombre es requerido');\n    }else if(this.gender==\"\"){\n      this.presentToast('El genero es requerico');\n    } else if(this.date_birth==\"\"){\n      this.presentToast('Se requiere la Fecha de Nacimiento');\n    } else if(this.email_address==\"\"){\n      this.presentToast('SE requiere el Correo');\n    } else if(this.password=='' && this.id == 0){\n      this.presentToast('Se requiere la Contraseña');\n    }else{\n      this.disabledbutton = true;\n      const loader = await this.loadingCtrl.create({\n        message: 'Espere por favor....',\n      });\n      await loader.present();\n\n      return new Promise(resolve =>{\n        let body = {\n          aksi: 'proses_crud',\n          id: this.id,\n          your_name: this.your_name,\n          gender: this.gender,\n          date_birth: this.date_birth,\n          email_address: this.email_address,\n          password: this.password,\n          action: a\n        }\n\n        this.accsPrvds.postData(body, 'proses_api.php').subscribe((res:any)=>{\n          if(res.success==true){\n            loader.dismiss();\n            this.disabledbutton = false;\n            this.presentToast(res.msg);\n            this.router.navigate(['/home2']);\n          }else{\n            loader.dismiss();\n            this.disabledbutton = false;\n            this.presentAlert(res.msg, a);\n          }\n        },(err)=>{\n          loader.dismiss();\n          this.disabledbutton = false;\n          this.presentAlert('Timeout',a);\n        });\n      });\n    }\n  }\n  \n\n  async presentToast(a){\n    const toast = await this.toastCtrl.create({\n      message: a,\n      duration: 1500,\n    });\n    toast.present();\n  }\n\n  async presentAlert(a,b) {\n    const alert = await this.alertCtrl.create({\n      header: a,\n      backdropDismiss: false,\n      buttons: [\n        {\n          text: 'Close',\n          handler: (blah) => {\n            console.log('Confirm Cancel: blah');\n          }\n        }, {\n          text: 'Try Again',\n          handler: () => {\n            this.crudAction(b);\n          }\n        }\n      ]\n    });\n\n    await alert.present();\n  }\n\n}\n\n\n \n\n\n  "]}